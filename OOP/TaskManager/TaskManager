import org.w3c.dom.ls.LSOutput;

import java.sql.Array;
import java.sql.SQLOutput;
import java.util.ArrayList;
import java.util.Objects;
import java.util.Scanner;

public class TaskManager {

    private ArrayList<Task> tasksList = new ArrayList<Task>();
    public static String[] menuOptions = {
            "Display all tasks",
            "Add a task",
            "Remove a task",
            "Change task status",
            "Change task priority",
            "End"
    };
    public static final Scanner sc = new Scanner(System.in);

    public void selectWhatToDo(){
        System.out.println("Please enter the number of an option you'd like to select:");
        for (int i=0; i<menuOptions.length; i++){
            System.out.println((i+1) + ". " + menuOptions[i]);
        }
        int userChoice = sc.nextInt();
        sc.nextLine();
        if (0<userChoice && userChoice<=menuOptions.length) {
            switch (userChoice){
                case 1 -> displayAllTasks();
                case 2 -> addTask();
                case 3 -> deleteTask();
                case 4 -> changeTaskStatus();
                case 5 -> changeTaskPriority();
                case 6 -> logOut();
            }
        }
    }

    public void printAllTasks() {
        if (tasksList.isEmpty()) {
            System.out.println("The current list of tasks is empty");
        } else {
            for (Task task : tasksList) {
                System.out.println(task.printTask());
            }
        }
    }

    public void displayAllTasks(){
        printAllTasks();
        selectWhatToDo();
    }

    public void addTask() {
        System.out.println("Please enter the task title:");
        String taskTitle = sc.nextLine();
        System.out.println("Please enter one of the possible priorities of the task: Low, Moderated, Urgent:");
        String taskPriority = sc.nextLine();
        int taskId = tasksList.size() + 1;

        try {
            Task tsk = new Task(taskId, taskTitle, taskPriority);
            tasksList.add(tsk);
            System.out.println("The task is successfully created!");
        } catch (Exception e) {
            System.out.println("The error occured while creating the task: " + e);
        }
        selectWhatToDo();
    }

    public void deleteTask(){
        printAllTasks();
        System.out.println("Please indicate the number of the task you'd like to delete:");
        int taskId = sc.nextInt();
        sc.nextLine();
        try{
            Task tsk = tasksList.remove(taskId-1);
            System.out.printf("The task %s was successfully deleted!\n", tsk.getTaskDescription());
        } catch (Exception e){
            System.out.println("The error occured while removing the task: " + e);
        }
        selectWhatToDo();

    }

    public void changeTaskStatus() {
        printAllTasks();
        System.out.println("Please, enter the id of a task you'd like to change a status for: ");
        int taskId = sc.nextInt();
        sc.nextLine();
        System.out.println("Please, enter the status you want to promote/demote your task to: ");
        String newStatus = sc.nextLine();
        try {
            Task tsk = tasksList.get(taskId-1);
            tsk.setTaskStatus(newStatus);
        } catch (Exception e) {
            System.out.println("Operation of changing the status of a task is unsuccessful.");
        }
        selectWhatToDo();
    }

    public void changeTaskPriority(){
        printAllTasks();
        System.out.println("Please, enter the id of a task you'd like to change a priority for: ");
        int taskId = sc.nextInt();
        sc.nextLine();
        System.out.println("Please, enter the ner priority you want to set: ");
        String newPriority = sc.nextLine();
        try {
            Task tsk = tasksList.get(taskId-1);
            tsk.setTaskPriority(newPriority);
        } catch (Exception e) {
            System.out.println("Operation of changing the priority of a task is unsuccessful.");
        }
        selectWhatToDo();
    }

    public void logOut(){
        System.out.println("Have a nice day!");
    }

    public static void main(String[] args) {
        System.out.println("Hello! Welcome to the task manager. C:");
        System.out.println("Here you can create and keep the track of the tasks you're currently working in.");
        System.out.println("What would you like to do?");
        TaskManager tskm = new TaskManager();
        tskm.selectWhatToDo();
    }

}
